apply plugin: 'com.android.application'
apply plugin: 'com.zhj.pp.HelloPlugin'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.zhj.gradledemo"
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}



//第一种方法，直接使用project的task()方法创建
//配置的时候就配置task的group和description
//description就是个说明，类似对注释
task helloTask(group:'hard',description:'task learn'){


    println 'this is helloTask' //直接写在闭包里面的，是在配置阶段就执行的

    doFirst {
        println 'task in do first'  //运行任务时，会第一个执行
    }


    doLast {
        println 'task in do last'   //运行任务时，会最后一个执行
    }
}


/*
//第二种方法，使用TaskContainer创建task
this.tasks.create(name:'helloTask2'){
    setGroup('hard')
    setDescription('task learn')
    println 'this is helloTask2'
}*/


def startBuildTime
def endBuildTime

//配置完后，所有的task的拓扑图都已经生成好了
this.afterEvaluate { Project project ->
    //保证要找的task已经配置完毕

    def preBuildTask = project.tasks.getByName('preBuild')
    preBuildTask.doFirst {
        startBuildTime = System.currentTimeMillis()
        println 'the start time is:' + startBuildTime
    }

    def buildTask = project.tasks.getByName('build')
    buildTask.doLast {
        endBuildTime = System.currentTimeMillis()
        println 'the build time is:' + (endBuildTime - startBuildTime)
    }
}




















